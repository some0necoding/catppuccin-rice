#!/bin/bash

function get_sink_id() {
    defaultSinkId=$(pactl --format=json list sinks | \
                    jq ".[] | select(.name == \"$(pactl get-default-sink)\") | 
                        .properties | 
                        .[\"object.id\"] | 
                        tonumber")

    echo $defaultSinkId
}

function get_percent() {
    echo $(wpctl get-volume $(get_sink_id) | awk '{ print $2 * 100 }')
}

function get_mute() {
    echo $(pactl --format=json list sinks | jq ".[] | select(.name == \"$(pactl get-default-sink)\") | .mute")
}

function percent() {
    pactl subscribe | grep --line-buffered -E "^Event 'change' on sink #$(get_sink_id)" | \
    while read line; do
        echo $(get_percent)
    done
}

function icon() {
    pactl subscribe | grep --line-buffered -E "^Event 'change' on sink #$(get_sink_id)" | \
    while read line; do
        local volume=$(get_percent)
        local muted=$(get_mute)

        if [[ $muted == "true" ]]; then
            echo "󰝟"
        elif (( $volume <= 33 )); then
            echo ""
        elif (( $volume <= 66 )); then
            echo ""
        elif (( $volume <= 100 )); then
            echo "󰕾"
        fi
    done
}

function mute_status() {
    pactl subscribe | grep --line-buffered -E "^Event 'change' on sink #$(get_sink_id)" | \
    while read line; do
        echo $(get_mute)
    done
}

function mute_toggle() {
    wpctl set-mute $(get_sink_id) toggle 
}

if [[ -n $1 && $1 == "percent" ]]; then
    percent
elif [[ -n $1 && $1 == "icon" ]]; then
    icon
elif [[ -n $1 && -n $2 && $1 == "mute" && $2 == "status" ]]; then
    mute_status
elif [[ -n $1 && -n $2 && $1 == "mute" && $2 == "toggle" ]]; then
    mute_toggle
fi
