#!/bin/bash

# PipeWire default sink id
function sink_id() {
    sinkId=$(pactl --format=json list sinks | \
             jq ".[] | select(.name == \"$(pactl get-default-sink)\") | 
                 .properties | 
                 .[\"object.id\"] | 
                 tonumber")

    echo $sinkId
}

# Either returns mute status or toggles mute for 
# audio input/output.
#   
#   Syntax:
#       mute input|output toggle|status
#
function mute() {
  
    nodeId=$(sink_id)
    nodeType="sink"

    if   [[ -n $1 && $1 == "status" ]]; then
       
        # Print current mute status
        echo $(pactl --format=json list ${nodeType}s | jq ".[] | select(.name == \"$(pactl get-default-${nodeType})\") | .mute")

        # Listen for events and update mute status
        pactl subscribe | grep --line-buffered -E "^Event 'change' on $nodeType #$nodeId" | \
        while read line; do
            
            echo $(pactl --format=json list ${nodeType}s | jq ".[] | select(.name == \"$(pactl get-default-${nodeType})\") | .mute")
        
            # Update nodeId every loop (it can change over time)
            [[ $nodeType == "sink"   ]] && nodeId=$(sink_id)

        done
    elif [[ -n $1 && $1 == "toggle" ]]; then
        wpctl set-mute $nodeId toggle
    fi
}

command=$1      # percent|mute
args=$2         # toggle|status|capped

$command $args
